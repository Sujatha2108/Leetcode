class Solution {
    public String findLexSmallestString(String s, int a, int b) {
        int n = s.length();
        if (n == 0) return s;

        java.util.Queue<String> q = new java.util.ArrayDeque<>();
        java.util.Set<String> seen = new java.util.HashSet<>();

        q.add(s);
        seen.add(s);
        String best = s;

        while (!q.isEmpty()) {
            String cur = q.poll();
            if (cur.compareTo(best) < 0) best = cur;

            // Operation 1: add 'a' to all odd indices (0-indexed => indices 1,3,5,...)
            char[] arr = cur.toCharArray();
            for (int i = 1; i < n; i += 2) {
                int digit = (arr[i] - '0' + a) % 10;
                arr[i] = (char) ('0' + digit);
            }
            String added = new String(arr);
            if (seen.add(added)) {
                q.add(added);
            }

            // Operation 2: rotate right by b positions
            // right rotate by b is equivalent to substring(n-b) + substring(0, n-b)
            int cut = n - b;
            String rotated = cur.substring(cut) + cur.substring(0, cut);
            if (seen.add(rotated)) {
                q.add(rotated);
            }
        }

        return best;
    }
}
