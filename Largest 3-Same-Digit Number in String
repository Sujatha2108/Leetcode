class Solution:
    def largestGoodInteger(self, num: str) -> str:
        max_good_integer = ""

        # Iterate through the string while checking for substrings of length 3
        for i in range(len(num) - 2):
            # Get the current substring of length 3
            substring = num[i:i + 3]
            # Check if all characters in the substring are the same
            if substring[0] == substring[1] == substring[2]:
                # Update max_good_integer if the current one is larger
                if substring > max_good_integer:
                    max_good_integer = substring

        return max_good_integer
