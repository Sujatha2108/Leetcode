from typing import List

class Solution:
    def minimumTeachings(self, n: int, languages: List[List[int]], friendships: List[List[int]]) -> int:
        langs = [set(l) for l in languages]
        problematic_users = set()

        for u, v in friendships:
            u -= 1
            v -= 1
            if not (langs[u] & langs[v]):
                problematic_users.add(u)
                problematic_users.add(v)

        if not problematic_users:
            return 0

        min_teach = float('inf')
        for lang in range(1, n + 1):
            teach_count = 0
            for u in problematic_users:
                if lang not in langs[u]:
                    teach_count += 1
            min_teach = min(min_teach, teach_count)

        return min_teach


if __name__ == "__main__":   # âœ… fixed
    sol = Solution()
    print(sol.minimumTeachings(
        2,
        [[1], [2], [1, 2]],
        [[1, 2], [1, 3], [2, 3]]
    ))  # expected 1

    print(sol.minimumTeachings(
        3,
        [[2], [1, 3], [1, 2], [3]],
        [[1, 4], [1, 2], [3, 4], [2, 3]]
    ))  # expected 2
